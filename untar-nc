#!/usr/bin/env python

import bz2
import gzip
import os
import shutil
import stat
import sys
import tarfile

checked_paths = {}
checked_perms = []

def untar_nc (filename):
	try:
		tarball = tarfile.open(filename)
		contents = tarball.getmembers()
		for item in contents:
			print "Extracting: "+item.name+" ("+str(item.size)+")", str(item.mode), item.uname, "("+str(item.uid)+")", item.gname, "("+str(item.gid)+")"
			safe_extract(tarball, item)
		#pre_check(contents)
	except Exception as e:
		sys.stderr.write(str(e) + "\n")

def safe_extract (tarball, item):
	if os.access(item.name, os.F_OK):
		metadata = os.lstat(item.name)
	else:
		metadata = None
	path = os.path.split(item.name)[0]
	if metadata != None:
		print "Exists:", item.name, metadata.st_uid, metadata.st_gid, oct(stat.S_IMODE(metadata.st_mode))
		if not item.isdir():
			ensure_writeable(path, lambda: backup_file(item.name))
	ensure_writeable(path, lambda: tarball.extract(item))

def ensure_writeable (directory, action):
	if directory == '':
		directory = '.'
	print "ensure_writeable:", directory
	if os.access(directory, os.W_OK):
		action()
	else:
		path = os.path.split(directory)[0]
		if path == '':
			writeable_do(directory, action)
		else:
			ensure_writeable (path, lambda: writeable_do(directory, action))

def writeable_do (directory, action):
	orig_mode = stat.S_IMODE(os.lstat(directory).st_mode)
	os.chmod(directory, stat.S_IRWXU|stat.S_IRWXG|stat.S_IRWXO)
	action()
	os.chmod(directory, orig_mode)


def backup_file (src, dest=None):
	path, basename = os.path.split(src)
	if dest == None:
		dest = os.path.join(path, "." + basename + ".bak.1")
	if os.access(dest, os.F_OK):
		base, num = os.path.splitext(dest)
		backup_num = int(num[1:]) + 1
		new_dest = base + "." + str(backup_num)
		backup_file(dest, new_dest)
	shutil.copy2(src, dest)

if __name__=='__main__':
	untar_nc(*sys.argv[1:])

